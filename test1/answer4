# creating q4rs.yml

apiVersion: apps/v1
kind: ReplicaSet
metadata:
 name: adhocrsjayesh4
 labels:
  adhoc: jayeshq4
  app: web1                     # this is the label of rc not label of pods
spec:
 selector: 
  matchLabels:
   adhoc: jayeshq4              # same label as of pods 
 replicas: 3                    # always one pod will be present even in case of current worker node failure
 template: 
  metadata: 
   name: mypodrs11           
   labels:
    adhoc: jayeshq4             # labels of pods
  spec:
   containers:
    - name: jayeshc1
      image: jayeshbudhwani1999/may2020q1:v1
      
      
   
      
# creating svc

apiVersion: v1
kind: Service
metadata:
 name: myserviceq4
spec:
 ports: 
  - name: mysvcport
    port: 4455 
    targetPort: 80
 selector:
  adhoc: jayeshq4                         # label of pod
 type: LoadBalancer                       # type of service LoadBalancer 
  
 
 # creating the rs as
 
 kubectl create -f q4.yml -n jayesh                     # -n jayesh (name space name)
 
 # creating the service using file as well as exposing the rs
 
 kubectl create -f q4svc.yml -n jayesh
 
                OR
                
 kubectl expose rs adhocrsjayesh4 --type LoadBalancer --port 80 -n jayesh
 

